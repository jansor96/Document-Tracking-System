/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jansorqr;

/**
 *
 * @author jansoriano acer
 */
import com.google.zxing.WriterException;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.Array;
import java.net.UnknownHostException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class Main extends javax.swing.JFrame implements java.awt.event.ActionListener {

    /**
     * Creates new form Main
     */
    public Main() {
        this.disposableLogs = new Logs();
        this.preview = new Preview();
        this.databaseConfig = new DatabaseConfig(this, true);
        this.db = new DatabaseManager(databaseConfig);
        this.trackerTable = new DatabaseTable();
        this.senderTable = new DatabaseTable();
        this.receiverTable = new DatabaseTable();
        this.senderTable = new DatabaseTable();
        this.receiverTable = new DatabaseTable();
        this.qrSize = 125;
        this.fileType = "png";
        initComponents();
        initButtonArrays();
        this.setVisible(true);
        //This is a one time prompt
        databaseConfig.showDialog();
        renameSenderTable();
        renameReceiverTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generatorPanel = new javax.swing.JPanel();
        genBrowseButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        saveLocation = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        outputImageDisplay = new javax.swing.JLabel();
        genCreateButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        genTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        senderPanel = new javax.swing.JPanel();
        senderLabel = new javax.swing.JLabel();
        senderSubmitButton = new javax.swing.JButton();
        senderLocation = new javax.swing.JTextField();
        senderBrowseButton = new javax.swing.JButton();
        documentTrackerPanel2 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        trackerSubPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        trackerSubPanel2 = new javax.swing.JPanel();
        receiverPanel = new javax.swing.JPanel();
        receiverBrowseButton = new javax.swing.JButton();
        receiverLabel = new javax.swing.JLabel();
        receiverSubmitButton = new javax.swing.JButton();
        receiverLocation = new javax.swing.JTextField();
        readerPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        readTextArea = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        openLocation = new javax.swing.JTextField();
        enlargeOutputButton = new javax.swing.JButton();
        readButton = new javax.swing.JButton();
        readBrowseButton = new javax.swing.JButton();
        inputImageDisplay = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        documentTrackerPanel = new javax.swing.JPanel();
        field17 = new javax.swing.JLabel();
        Field18 = new javax.swing.JLabel();
        Field19 = new javax.swing.JLabel();
        Field20 = new javax.swing.JLabel();
        Field21 = new javax.swing.JLabel();
        Field22 = new javax.swing.JLabel();
        Field23 = new javax.swing.JLabel();
        Field24 = new javax.swing.JLabel();
        addField = new javax.swing.JTextField();
        dateField = new javax.swing.JTextField();
        recField = new javax.swing.JTextField();
        destField = new javax.swing.JTextField();
        authorField = new javax.swing.JTextField();
        sourceField = new javax.swing.JTextField();
        prField = new javax.swing.JTextField();
        titleField = new javax.swing.JTextField();
        Field25 = new javax.swing.JLabel();
        statusField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        timeField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        toolsButtonGroup = new javax.swing.ButtonGroup();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        senderPanelOld1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        fieldVal10 = new javax.swing.JTextField();
        fieldVal11 = new javax.swing.JTextField();
        fieldVal12 = new javax.swing.JTextField();
        fieldVal13 = new javax.swing.JTextField();
        fieldVal14 = new javax.swing.JTextField();
        fieldVal15 = new javax.swing.JTextField();
        fieldVal16 = new javax.swing.JTextField();
        fieldVal17 = new javax.swing.JTextField();
        fieldCheckBox9 = new javax.swing.JCheckBox();
        fieldCheckBox10 = new javax.swing.JCheckBox();
        fieldCheckBox11 = new javax.swing.JCheckBox();
        fieldCheckBox12 = new javax.swing.JCheckBox();
        fieldCheckBox13 = new javax.swing.JCheckBox();
        fieldCheckBox14 = new javax.swing.JCheckBox();
        fieldCheckBox15 = new javax.swing.JCheckBox();
        fieldCheckBox16 = new javax.swing.JCheckBox();
        field9 = new javax.swing.JLabel();
        field10 = new javax.swing.JLabel();
        field11 = new javax.swing.JLabel();
        field12 = new javax.swing.JLabel();
        field13 = new javax.swing.JLabel();
        field14 = new javax.swing.JLabel();
        field15 = new javax.swing.JLabel();
        field16 = new javax.swing.JLabel();
        fieldVal18 = new javax.swing.JTextField();
        docTypeSelector1 = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        saveLocation3 = new javax.swing.JTextField();
        genBrowseButton3 = new javax.swing.JButton();
        senderCreateButton2 = new javax.swing.JButton();
        checkAllBox1 = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        StatusArea = new javax.swing.JTextArea();
        CenterPanel = new javax.swing.JPanel();
        jMenuBar2 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newSessionMenu = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        databaseConfigMenu = new javax.swing.JMenuItem();
        senderFormConfigMenu = new javax.swing.JMenuItem();
        receiverFormConfigMenu = new javax.swing.JMenuItem();
        logsMenu = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        editSizeMenu = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        toolsMenu = new javax.swing.JMenu();
        hideAllToolSelect = new javax.swing.JRadioButtonMenuItem();
        senderToolSelect = new javax.swing.JRadioButtonMenuItem();
        receiverToolSelect = new javax.swing.JRadioButtonMenuItem();
        trackerToolSelect = new javax.swing.JRadioButtonMenuItem();
        readerToolSelect = new javax.swing.JRadioButtonMenuItem();
        generatorToolSelect = new javax.swing.JRadioButtonMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        generatorPanel.setPreferredSize(new java.awt.Dimension(555, 190));

        genBrowseButton.setText("Browse");
        genBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genBrowseButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Save image to");

        saveLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveLocationActionPerformed(evt);
            }
        });

        jLabel10.setText("Information to Encode");

        jLabel11.setText("Output");

        outputImageDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outputImageDisplayMouseClicked(evt);
            }
        });

        genCreateButton.setText("Create");
        genCreateButton.setToolTipText("Create QR code.");
        genCreateButton.setPreferredSize(new java.awt.Dimension(75, 102));
        genCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genCreateButtonActionPerformed(evt);
            }
        });

        genTextArea.setColumns(20);
        genTextArea.setRows(5);
        genTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                genTextAreaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                genTextAreaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                genTextAreaKeyTyped(evt);
            }
        });
        jScrollPane4.setViewportView(genTextArea);

        jLabel4.setText("QR Generator");

        javax.swing.GroupLayout generatorPanelLayout = new javax.swing.GroupLayout(generatorPanel);
        generatorPanel.setLayout(generatorPanelLayout);
        generatorPanelLayout.setHorizontalGroup(
            generatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generatorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, generatorPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(generatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(generatorPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel10)
                        .addGap(301, 301, 301)
                        .addComponent(jLabel11))
                    .addGroup(generatorPanelLayout.createSequentialGroup()
                        .addGroup(generatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(generatorPanelLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel9)
                                .addGap(5, 5, 5)
                                .addComponent(saveLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(generatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(genCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(outputImageDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        generatorPanelLayout.setVerticalGroup(
            generatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generatorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(4, 4, 4)
                .addGroup(generatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(generatorPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(generatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(generatorPanelLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel9))
                            .addComponent(saveLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(generatorPanelLayout.createSequentialGroup()
                        .addComponent(genCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(genBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(outputImageDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        senderPanel.setName(""); // NOI18N
        senderPanel.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                senderPanelComponentAdded(evt);
            }
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                senderPanelComponentRemoved(evt);
            }
        });
        senderPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        senderLabel.setDisplayedMnemonic('v');
        senderLabel.setText("Save image to:");
        senderLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                senderLabelMouseClicked(evt);
            }
        });
        senderPanel.add(senderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 110, 30));

        senderSubmitButton.setMnemonic('C');
        senderSubmitButton.setText("Submit");
        senderSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senderSubmitButtonActionPerformed(evt);
            }
        });
        senderPanel.add(senderSubmitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, 500, 40));

        senderLocation.setMinimumSize(new java.awt.Dimension(140, 24));
        senderLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senderLocationActionPerformed(evt);
            }
        });
        senderPanel.add(senderLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 310, 310, 30));

        senderBrowseButton.setMnemonic('B');
        senderBrowseButton.setText("Browse");
        senderBrowseButton.setMaximumSize(new java.awt.Dimension(10, 32));
        senderBrowseButton.setPreferredSize(new java.awt.Dimension(10, 32));
        senderBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senderBrowseButtonActionPerformed(evt);
            }
        });
        senderPanel.add(senderBrowseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 310, 80, 30));

        documentTrackerPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        trackerSubPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(trackerSubPanel1);

        jTabbedPane2.addTab("Sender Items", jPanel1);

        trackerSubPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(trackerSubPanel2);

        jTabbedPane2.addTab("Received Items", jPanel2);

        documentTrackerPanel2.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 430));

        receiverPanel.setName(""); // NOI18N
        receiverPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        receiverBrowseButton.setMnemonic('B');
        receiverBrowseButton.setText("Browse");
        receiverBrowseButton.setMaximumSize(new java.awt.Dimension(10, 32));
        receiverBrowseButton.setPreferredSize(new java.awt.Dimension(10, 32));
        receiverBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiverBrowseButtonActionPerformed(evt);
            }
        });
        receiverPanel.add(receiverBrowseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 310, 80, 30));

        receiverLabel.setDisplayedMnemonic('v');
        receiverLabel.setText("Open QR image");
        receiverLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                receiverLabelMouseClicked(evt);
            }
        });
        receiverPanel.add(receiverLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 110, 30));

        receiverSubmitButton.setMnemonic('C');
        receiverSubmitButton.setText("Submit");
        receiverSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiverSubmitButtonActionPerformed(evt);
            }
        });
        receiverPanel.add(receiverSubmitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, 500, 40));

        receiverLocation.setMinimumSize(new java.awt.Dimension(140, 24));
        receiverLocation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                receiverLocationFocusLost(evt);
            }
        });
        receiverLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiverLocationActionPerformed(evt);
            }
        });
        receiverPanel.add(receiverLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 310, 310, 30));

        readerPanel.setMinimumSize(new java.awt.Dimension(555, 185));
        readerPanel.setPreferredSize(new java.awt.Dimension(555, 190));

        jLabel13.setText("Open image");

        readTextArea.setEditable(false);
        readTextArea.setColumns(20);
        readTextArea.setRows(5);
        jScrollPane1.setViewportView(readTextArea);

        jLabel14.setText("Output text");

        openLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openLocationActionPerformed(evt);
            }
        });

        enlargeOutputButton.setText("Enlarge");
        enlargeOutputButton.setToolTipText("Enlarge output text.");
        enlargeOutputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enlargeOutputButtonActionPerformed(evt);
            }
        });

        readButton.setText("Read");
        readButton.setToolTipText("Read QR code.");
        readButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readButtonActionPerformed(evt);
            }
        });

        readBrowseButton.setText("Browse");
        readBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readBrowseButtonActionPerformed(evt);
            }
        });

        inputImageDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputImageDisplayMouseClicked(evt);
            }
        });

        jLabel15.setText("Input Image");

        jLabel5.setText("QR Reader");

        javax.swing.GroupLayout readerPanelLayout = new javax.swing.GroupLayout(readerPanel);
        readerPanel.setLayout(readerPanelLayout);
        readerPanelLayout.setHorizontalGroup(
            readerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(readerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(readerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(readerPanelLayout.createSequentialGroup()
                        .addGroup(readerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(readerPanelLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel13)
                                .addGap(17, 17, 17)
                                .addComponent(openLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(readerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(readButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(readBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(inputImageDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(readerPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(readerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(readerPanelLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(192, 192, 192)
                                .addComponent(enlargeOutputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(jLabel15)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        readerPanelLayout.setVerticalGroup(
            readerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(readerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(readerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(enlargeOutputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGroup(readerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(readerPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(readerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(readerPanelLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel13))
                            .addComponent(openLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(readerPanelLayout.createSequentialGroup()
                        .addComponent(readButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(readBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(inputImageDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        enlargeOutputButton.getAccessibleContext().setAccessibleDescription("");
        readButton.getAccessibleContext().setAccessibleDescription("");

        field17.setText("Title");
        field17.setToolTipText("Click to Edit");
        field17.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        field17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                field17MouseClicked(evt);
            }
        });

        Field18.setText("PR Number");
        Field18.setToolTipText("Click to Edit");
        Field18.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Field18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Field18MouseClicked(evt);
            }
        });

        Field19.setText("Source Office");
        Field19.setToolTipText("Click to Edit");
        Field19.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Field19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Field19MouseClicked(evt);
            }
        });

        Field20.setText("Author");
        Field20.setToolTipText("Click to Edit");
        Field20.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Field20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Field20MouseClicked(evt);
            }
        });

        Field21.setText("Destination Office");
        Field21.setToolTipText("Click to Edit");
        Field21.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Field21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Field21MouseClicked(evt);
            }
        });

        Field22.setText("Receiving Personnel");
        Field22.setToolTipText("Click to Edit");
        Field22.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Field22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Field22MouseClicked(evt);
            }
        });

        Field23.setText("Date & Time");
        Field23.setToolTipText("Click to Edit");
        Field23.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Field23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Field23MouseClicked(evt);
            }
        });

        Field24.setText("Additional Text");
        Field24.setToolTipText("Click to Edit");
        Field24.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Field24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Field24MouseClicked(evt);
            }
        });

        addField.setEditable(false);

        dateField.setEditable(false);
        dateField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateFieldMouseClicked(evt);
            }
        });
        dateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFieldActionPerformed(evt);
            }
        });

        recField.setEditable(false);

        destField.setEditable(false);

        authorField.setEditable(false);
        authorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorFieldActionPerformed(evt);
            }
        });

        sourceField.setEditable(false);
        sourceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceFieldActionPerformed(evt);
            }
        });

        prField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                prFieldKeyPressed(evt);
            }
        });

        titleField.setEditable(false);

        Field25.setText("Status");
        Field25.setToolTipText("Click to Edit");
        Field25.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Field25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Field25MouseClicked(evt);
            }
        });

        statusField.setEditable(false);

        jButton1.setText("Fetch");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        timeField.setEditable(false);
        timeField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timeFieldMouseClicked(evt);
            }
        });
        timeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("Document Tracker");

        javax.swing.GroupLayout documentTrackerPanelLayout = new javax.swing.GroupLayout(documentTrackerPanel);
        documentTrackerPanel.setLayout(documentTrackerPanelLayout);
        documentTrackerPanelLayout.setHorizontalGroup(
            documentTrackerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(documentTrackerPanelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(documentTrackerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(documentTrackerPanelLayout.createSequentialGroup()
                        .addComponent(field17, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(documentTrackerPanelLayout.createSequentialGroup()
                        .addComponent(Field18, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(prField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(documentTrackerPanelLayout.createSequentialGroup()
                        .addComponent(Field19, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(sourceField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(documentTrackerPanelLayout.createSequentialGroup()
                        .addComponent(Field20, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(authorField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(documentTrackerPanelLayout.createSequentialGroup()
                        .addComponent(Field21, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(destField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(documentTrackerPanelLayout.createSequentialGroup()
                        .addComponent(Field22, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(recField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(documentTrackerPanelLayout.createSequentialGroup()
                        .addComponent(Field23, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(documentTrackerPanelLayout.createSequentialGroup()
                        .addComponent(Field24, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(addField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(documentTrackerPanelLayout.createSequentialGroup()
                        .addComponent(Field25, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(statusField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(documentTrackerPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        documentTrackerPanelLayout.setVerticalGroup(
            documentTrackerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(documentTrackerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(documentTrackerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(field17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(documentTrackerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Field18, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(documentTrackerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Field19, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sourceField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(documentTrackerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Field20, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(documentTrackerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Field21, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(documentTrackerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Field22, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(documentTrackerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Field23, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(documentTrackerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Field24, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(documentTrackerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Field25, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jButton1)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        toolsButtonGroup.add(senderToolSelect);
        toolsButtonGroup.add(readerToolSelect);
        toolsButtonGroup.add(generatorToolSelect);
        toolsButtonGroup.add(trackerToolSelect);
        toolsButtonGroup.add(hideAllToolSelect);
        toolsButtonGroup.add(receiverToolSelect);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jMenuItem6.setText("jMenuItem6");

        jMenuItem8.setText("jMenuItem8");

        jLabel7.setDisplayedMnemonic('S');
        jLabel7.setText("Select Document Type");
        jLabel7.setToolTipText("");

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(fieldVal10, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 170, 25));
        jPanel3.add(fieldVal11, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 25, 170, 25));

        fieldVal12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldVal12ActionPerformed(evt);
            }
        });
        jPanel3.add(fieldVal12, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 170, 25));

        fieldVal13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldVal13ActionPerformed(evt);
            }
        });
        jPanel3.add(fieldVal13, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 75, 170, 25));
        jPanel3.add(fieldVal14, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 170, 25));
        jPanel3.add(fieldVal15, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 125, 170, 25));

        fieldVal16.setEditable(false);
        fieldVal16.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldVal16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldVal16MouseClicked(evt);
            }
        });
        fieldVal16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldVal16ActionPerformed(evt);
            }
        });
        jPanel3.add(fieldVal16, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 150, 85, 25));
        jPanel3.add(fieldVal17, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 175, 170, 25));
        jPanel3.add(fieldCheckBox9, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 0, 25, 25));
        jPanel3.add(fieldCheckBox10, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 25, 25, 25));
        jPanel3.add(fieldCheckBox11, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 50, 25, 25));
        jPanel3.add(fieldCheckBox12, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 75, 25, 25));
        jPanel3.add(fieldCheckBox13, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 100, 25, 25));

        fieldCheckBox14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCheckBox14ActionPerformed(evt);
            }
        });
        jPanel3.add(fieldCheckBox14, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 125, 25, 25));
        jPanel3.add(fieldCheckBox15, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 150, 25, 25));
        jPanel3.add(fieldCheckBox16, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 175, 25, 25));

        field9.setText("Additional Text");
        field9.setToolTipText("Click to Edit");
        field9.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        field9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                field9MouseClicked(evt);
            }
        });
        jPanel3.add(field9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 175, 120, 25));

        field10.setText("Title");
        field10.setToolTipText("Click to Edit");
        field10.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        field10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                field10MouseClicked(evt);
            }
        });
        jPanel3.add(field10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 120, 25));

        field11.setText("PR Number");
        field11.setToolTipText("Click to Edit");
        field11.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        field11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                field11MouseClicked(evt);
            }
        });
        jPanel3.add(field11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 25, 120, 25));

        field12.setText("Source Office");
        field12.setToolTipText("Click to Edit");
        field12.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        field12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                field12MouseClicked(evt);
            }
        });
        jPanel3.add(field12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 120, 25));

        field13.setText("Author");
        field13.setToolTipText("Click to Edit");
        field13.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        field13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                field13MouseClicked(evt);
            }
        });
        jPanel3.add(field13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 75, 120, 25));

        field14.setText("Destination Office");
        field14.setToolTipText("Click to Edit");
        field14.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        field14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                field14MouseClicked(evt);
            }
        });
        jPanel3.add(field14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 120, 25));

        field15.setText("Receiving Personnel");
        field15.setToolTipText("Click to Edit");
        field15.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        field15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                field15MouseClicked(evt);
            }
        });
        jPanel3.add(field15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 125, 120, 25));

        field16.setText("Date & Time");
        field16.setToolTipText("Click to Edit");
        field16.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        field16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                field16MouseClicked(evt);
            }
        });
        jPanel3.add(field16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 120, 25));

        fieldVal18.setEditable(false);
        fieldVal18.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldVal18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldVal18MouseClicked(evt);
            }
        });
        fieldVal18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldVal18ActionPerformed(evt);
            }
        });
        jPanel3.add(fieldVal18, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 85, 25));

        docTypeSelector1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                docTypeSelector1ItemStateChanged(evt);
            }
        });
        docTypeSelector1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docTypeSelector1ActionPerformed(evt);
            }
        });

        jLabel19.setDisplayedMnemonic('v');
        jLabel19.setText("Save image to:");
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });

        saveLocation3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveLocation3ActionPerformed(evt);
            }
        });

        genBrowseButton3.setMnemonic('B');
        genBrowseButton3.setText("Browse");
        genBrowseButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genBrowseButton3ActionPerformed(evt);
            }
        });

        senderCreateButton2.setMnemonic('C');
        senderCreateButton2.setText("Submit");
        senderCreateButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senderCreateButton2ActionPerformed(evt);
            }
        });

        checkAllBox1.setMnemonic('E');
        checkAllBox1.setText("Information to Encode:");
        checkAllBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAllBox1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Sender Form");

        javax.swing.GroupLayout senderPanelOld1Layout = new javax.swing.GroupLayout(senderPanelOld1);
        senderPanelOld1.setLayout(senderPanelOld1Layout);
        senderPanelOld1Layout.setHorizontalGroup(
            senderPanelOld1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, senderPanelOld1Layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addGroup(senderPanelOld1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(senderPanelOld1Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(docTypeSelector1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7)
                    .addGroup(senderPanelOld1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(checkAllBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(senderPanelOld1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel19)
                        .addGap(57, 57, 57)
                        .addComponent(saveLocation3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(genBrowseButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(senderCreateButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );
        senderPanelOld1Layout.setVerticalGroup(
            senderPanelOld1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(senderPanelOld1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(senderPanelOld1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(docTypeSelector1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(senderPanelOld1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(checkAllBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(senderPanelOld1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveLocation3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genBrowseButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(senderCreateButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QR");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(640, 480));

        jScrollPane2.setMaximumSize(new java.awt.Dimension(32767, 500));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(20, 100));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(this.getSize().width,60));

        StatusArea.setEditable(false);
        StatusArea.setColumns(20);
        StatusArea.setRows(5);
        StatusArea.setText("Status");
        jScrollPane2.setViewportView(StatusArea);

        getContentPane().add(jScrollPane2, java.awt.BorderLayout.PAGE_START);
        getContentPane().remove(jScrollPane2);
        getContentPane().add(jScrollPane2,java.awt.BorderLayout.SOUTH);

        CenterPanel.setPreferredSize(new java.awt.Dimension(100, 100));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout();
        flowLayout1.setAlignOnBaseline(true);
        CenterPanel.setLayout(flowLayout1);
        getContentPane().add(CenterPanel, java.awt.BorderLayout.CENTER);

        fileMenu.setMnemonic('F');
        fileMenu.setText("File");
        fileMenu.setToolTipText("");

        newSessionMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        newSessionMenu.setMnemonic('N');
        newSessionMenu.setText("New Session");
        newSessionMenu.setToolTipText("Restarts window and clears all the fields.");
        newSessionMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSessionMenuActionPerformed(evt);
            }
        });
        fileMenu.add(newSessionMenu);

        jMenuItem2.setMnemonic('P');
        jMenuItem2.setText("Locate Profile Folder");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem2);

        databaseConfigMenu.setMnemonic('D');
        databaseConfigMenu.setText("Configure Database");
        databaseConfigMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                databaseConfigMenuActionPerformed(evt);
            }
        });
        fileMenu.add(databaseConfigMenu);

        senderFormConfigMenu.setMnemonic('S');
        senderFormConfigMenu.setText("Configure Sender Form");
        senderFormConfigMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senderFormConfigMenuActionPerformed(evt);
            }
        });
        fileMenu.add(senderFormConfigMenu);

        receiverFormConfigMenu.setMnemonic('R');
        receiverFormConfigMenu.setText("Configure Receiver Form");
        receiverFormConfigMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiverFormConfigMenuActionPerformed(evt);
            }
        });
        fileMenu.add(receiverFormConfigMenu);

        logsMenu.setMnemonic('L');
        logsMenu.setText("Logs");
        logsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logsMenuActionPerformed(evt);
            }
        });
        fileMenu.add(logsMenu);

        jMenuBar2.add(fileMenu);

        editMenu.setMnemonic('E');
        editMenu.setText("Edit");
        editMenu.setToolTipText("Edit image size.");

        editSizeMenu.setMnemonic('E');
        editSizeMenu.setText("QR Size");
        editSizeMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSizeMenuActionPerformed(evt);
            }
        });
        editMenu.add(editSizeMenu);

        jMenuItem1.setText("PR Column Number");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        editMenu.add(jMenuItem1);

        jMenuItem3.setText("Contol Column Number");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        editMenu.add(jMenuItem3);

        jMenuBar2.add(editMenu);

        toolsMenu.setMnemonic('T');
        toolsMenu.setText("Tools");
        toolsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolsMenuActionPerformed(evt);
            }
        });

        hideAllToolSelect.setMnemonic('A');
        hideAllToolSelect.setSelected(true);
        hideAllToolSelect.setText("Hide All");
        hideAllToolSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideAllToolSelectActionPerformed(evt);
            }
        });
        toolsMenu.add(hideAllToolSelect);

        senderToolSelect.setMnemonic('S');
        senderToolSelect.setText("Sender Form");
        senderToolSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senderToolSelectActionPerformed(evt);
            }
        });
        toolsMenu.add(senderToolSelect);

        receiverToolSelect.setMnemonic('e');
        receiverToolSelect.setText("Receiver Form");
        receiverToolSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiverToolSelectActionPerformed(evt);
            }
        });
        toolsMenu.add(receiverToolSelect);

        trackerToolSelect.setMnemonic('D');
        trackerToolSelect.setText("Document Tracker");
        trackerToolSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackerToolSelectActionPerformed(evt);
            }
        });
        toolsMenu.add(trackerToolSelect);

        readerToolSelect.setMnemonic('R');
        readerToolSelect.setText("QR Reader");
        readerToolSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readerToolSelectActionPerformed(evt);
            }
        });
        toolsMenu.add(readerToolSelect);

        generatorToolSelect.setMnemonic('G');
        generatorToolSelect.setText("QR Generator");
        generatorToolSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatorToolSelectActionPerformed(evt);
            }
        });
        toolsMenu.add(generatorToolSelect);

        jMenuItem4.setText("Control Number Generator");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        toolsMenu.add(jMenuItem4);

        jMenuBar2.add(toolsMenu);

        setJMenuBar(jMenuBar2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initButtonArrays() {
        receiverFieldName = new javax.swing.JLabel[20];
        receiverFieldValue = new javax.swing.JTextField[20];
        receiverInsertTextButton = new javax.swing.JButton[20];
        senderFieldName = new javax.swing.JLabel[20];
        senderFieldValue = new javax.swing.JTextField[20];
        senderInsertTextButton = new javax.swing.JButton[20];
        for (int i = 0; i < receiverFieldName.length; i++) {
            receiverFieldName[i] = new javax.swing.JLabel();
            receiverFieldValue[i] = new javax.swing.JTextField();
            receiverInsertTextButton[i] = new javax.swing.JButton("Insert Text");
            receiverInsertTextButton[i].addActionListener(this);
            senderFieldName[i] = new javax.swing.JLabel();
            senderFieldValue[i] = new javax.swing.JTextField();
            senderInsertTextButton[i] = new javax.swing.JButton("Insert Text");
            senderInsertTextButton[i].addActionListener(this);
        }
    }

    private void showOpenDialog() {
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG & GIF Images", "jpg", "gif", "png");
        fc.setFileFilter(filter);
        int returnVal = fc.showSaveDialog(Main.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            openLocation.setText(fc.getSelectedFile().toString());
            receiverLocation.setText(fc.getSelectedFile().toString());
        }
    }

    private void showSaveDialog() {
        if (workingDir != null) {
            fc.setCurrentDirectory(workingDir);
        }
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG & GIF Images", "jpg", "gif", "png");
        fc.setFileFilter(filter);
        int returnVal = fc.showSaveDialog(Main.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            senderLocation.setText(fc.getSelectedFile().toString());
            saveLocation.setText(fc.getSelectedFile().toString());
            this.upDateMyCurrentDirectory();
        }
    }

    private void upDateMyCurrentDirectory() {
        this.workingDir = fc.getCurrentDirectory();
    }
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        File[] file;
        fc.setMultiSelectionEnabled(true);
        int returnVal = fc.showOpenDialog(Main.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFiles();
            for (int i = 0; i < file.length; i++) {
                System.out.println("Checking file " + file[i].toString());
                updateTypeList(file[i]);
                System.out.println("Done checking file " + file[i].toString());
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void Field25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Field25MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Field25MouseClicked

    private void sourceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sourceFieldActionPerformed

    private void authorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorFieldActionPerformed

    private void dateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFieldActionPerformed

    private void dateFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFieldMouseClicked

    private void Field24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Field24MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Field24MouseClicked

    private void Field23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Field23MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Field23MouseClicked

    private void Field22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Field22MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Field22MouseClicked

    private void Field21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Field21MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Field21MouseClicked

    private void Field20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Field20MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Field20MouseClicked

    private void Field19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Field19MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Field19MouseClicked

    private void Field18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Field18MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Field18MouseClicked

    private void field17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_field17MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_field17MouseClicked

    private void enlargeOutputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enlargeOutputButtonActionPerformed
        // TODO add your handling code here:
        preview.showTextArea(readTextArea.getText());
    }//GEN-LAST:event_enlargeOutputButtonActionPerformed

    private void readButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readButtonActionPerformed
        // TODO add your handling code here:
        readQR();
        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(openLocation.getText());
        java.awt.Image image = icon.getImage();
        icon.setImage(image.getScaledInstance(125, 125, Image.SCALE_AREA_AVERAGING));
        inputImageDisplay.setIcon(icon);
    }//GEN-LAST:event_readButtonActionPerformed

    private void readBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readBrowseButtonActionPerformed
        // TODO add your handling code here:
        this.showOpenDialog();
    }//GEN-LAST:event_readBrowseButtonActionPerformed

    private void genCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genCreateButtonActionPerformed
        // TODO add your handling code here:
        if (workingDir != null) {
            fc.setCurrentDirectory(workingDir);
        }
        qrCodeText = genTextArea.getText();
        filePath = saveLocation.getText();
        createQR(qrCodeText, filePath);
        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(saveLocation.getText());
        java.awt.Image image = icon.getImage();
        icon.setImage(image.getScaledInstance(125, 125, Image.SCALE_AREA_AVERAGING));
        outputImageDisplay.setIcon(icon);
        Main.workingDir = fc.getCurrentDirectory();
    }//GEN-LAST:event_genCreateButtonActionPerformed

    private void genBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genBrowseButtonActionPerformed
        // TODO add your handling code here:
        this.showSaveDialog();
    }//GEN-LAST:event_genBrowseButtonActionPerformed

    private void senderSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senderSubmitButtonActionPerformed
        // TODO add your handling code here:
        Main.report("Saving QR Image to file...");
        if (senderLocation.getText().equals("")) {
            this.showSaveDialog();
        }
        for (int i = 0; i < senderFieldValue.length; i++) {
            qrCodeText = qrCodeText + senderFieldName[i].getText() + " : "
                    + senderFieldValue[i].getText() + "\n";
        }
        genTextArea.setText(qrCodeText);
        filePath = senderLocation.getText();
        createQR(senderFieldValue[0].getText(), filePath);
        preview.showImageArea(senderLocation.getText());

        Main.report("Done saving QR Image to file.");

        Main.report("Submitting QR values to database...");
        //This part registers the current field values to the database.
        String str[] = new String[senderTable.getColumnCount()];
        for (int i = 0; i < senderTable.getColumnCount(); i++) {
            str[i] = senderFieldValue[i].getText();
        }
        db.setTableToUse(senderTable);
        db.insertRow(senderTable.getColumnNames(), str, true);
        Main.report("Done submitting QR values to database.");
    }//GEN-LAST:event_senderSubmitButtonActionPerformed

    private void toolsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolsMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolsMenuActionPerformed

    private void logsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logsMenuActionPerformed
        // TODO add your handling code here:
        disposableLogs.setText(this.statusField.getText());
    }//GEN-LAST:event_logsMenuActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        fetch();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void prFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            fetch();
        }
    }//GEN-LAST:event_prFieldKeyPressed

    private void editSizeMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSizeMenuActionPerformed
        // TODO add your handling code here:
        qrSize = Integer.valueOf(JOptionPane.showInputDialog(this, "Enter image size:\nDefault: 125", "Set size", JOptionPane.QUESTION_MESSAGE));
    }//GEN-LAST:event_editSizeMenuActionPerformed

    private void inputImageDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputImageDisplayMouseClicked
        // TODO add your handling code here:
        preview.showImageArea(openLocation.getText());
    }//GEN-LAST:event_inputImageDisplayMouseClicked

    private void outputImageDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outputImageDisplayMouseClicked
        // TODO add your handling code here:
        preview.showImageArea(saveLocation.getText());
    }//GEN-LAST:event_outputImageDisplayMouseClicked

    private void senderLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_senderLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_senderLabelMouseClicked

    private void newSessionMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSessionMenuActionPerformed
        // TODO add your handling code here:
        new Main();
        this.dispose();
    }//GEN-LAST:event_newSessionMenuActionPerformed

    private void senderToolSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senderToolSelectActionPerformed
        // TODO add your handling code here:     
        new CtrlNumGenerator().setVisible(true);
        boolean val = new javax.swing.JRadioButtonMenuItem().getClass().cast(evt.getSource()).isSelected();
        if (val) {
            buildSenderPanel();
            CenterPanel.removeAll();
            CenterPanel.add(senderPanel);
            blink(CenterPanel);
        }
    }//GEN-LAST:event_senderToolSelectActionPerformed

    private void hideAllToolSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hideAllToolSelectActionPerformed
        // TODO add your handling code here:
        CenterPanel.removeAll();
        blink(CenterPanel);
    }//GEN-LAST:event_hideAllToolSelectActionPerformed

    private void trackerToolSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackerToolSelectActionPerformed
        // TODO add your handling code here:
        boolean val = new javax.swing.JRadioButtonMenuItem().getClass().cast(evt.getSource()).isSelected();
        if (val) {
            trackerPR = JOptionPane.showInputDialog(this, "Enter Control number:", "Tracker ", JOptionPane.QUESTION_MESSAGE);
            buildTrackerSubPanel1();
            buildTrackerSubPanel2();
            CenterPanel.removeAll();
            CenterPanel.add(documentTrackerPanel2);
            blink(CenterPanel);
        }
    }//GEN-LAST:event_trackerToolSelectActionPerformed

    private void readerToolSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readerToolSelectActionPerformed
        // TODO add your handling code here:
        boolean val = new javax.swing.JRadioButtonMenuItem().getClass().cast(evt.getSource()).isSelected();
        if (val) {
            CenterPanel.removeAll();
            CenterPanel.add(readerPanel);
            blink(CenterPanel);
        }
    }//GEN-LAST:event_readerToolSelectActionPerformed

    private void generatorToolSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatorToolSelectActionPerformed
        // TODO add your handling code here:
        boolean val = new javax.swing.JRadioButtonMenuItem().getClass().cast(evt.getSource()).isSelected();
        if (val) {
            CenterPanel.removeAll();
            CenterPanel.add(generatorPanel);
            blink(CenterPanel);
        }
    }//GEN-LAST:event_generatorToolSelectActionPerformed

    private void saveLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveLocationActionPerformed
        // TODO add your handling code here:
        saveLocation.selectAll();
    }//GEN-LAST:event_saveLocationActionPerformed

    private void openLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openLocationActionPerformed
        // TODO add your handling code here:
        openLocation.selectAll();
    }//GEN-LAST:event_openLocationActionPerformed

    private void timeFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timeFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_timeFieldMouseClicked

    private void timeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeFieldActionPerformed

    private void databaseConfigMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_databaseConfigMenuActionPerformed
        // TODO add your handling code here:
        report("Showing DatabaseConfig dialog...");
        databaseConfig.showDialog();
        report("Dialog closed.");
    }//GEN-LAST:event_databaseConfigMenuActionPerformed

    private void genTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_genTextAreaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_genTextAreaKeyTyped

    private void genTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_genTextAreaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_genTextAreaKeyPressed

    private void genTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_genTextAreaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_genTextAreaKeyReleased

    private void fieldVal12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldVal12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldVal12ActionPerformed

    private void fieldVal13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldVal13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldVal13ActionPerformed

    private void fieldVal16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldVal16MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldVal16MouseClicked

    private void fieldVal16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldVal16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldVal16ActionPerformed

    private void fieldCheckBox14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCheckBox14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCheckBox14ActionPerformed

    private void field9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_field9MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_field9MouseClicked

    private void field10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_field10MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_field10MouseClicked

    private void field11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_field11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_field11MouseClicked

    private void field12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_field12MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_field12MouseClicked

    private void field13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_field13MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_field13MouseClicked

    private void field14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_field14MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_field14MouseClicked

    private void field15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_field15MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_field15MouseClicked

    private void field16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_field16MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_field16MouseClicked

    private void fieldVal18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldVal18MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldVal18MouseClicked

    private void fieldVal18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldVal18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldVal18ActionPerformed

    private void docTypeSelector1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_docTypeSelector1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_docTypeSelector1ItemStateChanged

    private void docTypeSelector1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docTypeSelector1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docTypeSelector1ActionPerformed

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel19MouseClicked

    private void saveLocation3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveLocation3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveLocation3ActionPerformed

    private void genBrowseButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genBrowseButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genBrowseButton3ActionPerformed

    private void senderCreateButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senderCreateButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_senderCreateButton2ActionPerformed

    private void checkAllBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAllBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkAllBox1ActionPerformed

    private void senderLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senderLocationActionPerformed
        // TODO add your handling code here:
        senderLocation.selectAll();
    }//GEN-LAST:event_senderLocationActionPerformed

    private void senderBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senderBrowseButtonActionPerformed
        // TODO add your handling code here:
        this.showSaveDialog();
    }//GEN-LAST:event_senderBrowseButtonActionPerformed

    private void senderFormConfigMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senderFormConfigMenuActionPerformed
        // TODO add your handling code here:
        renameSenderTable();
    }//GEN-LAST:event_senderFormConfigMenuActionPerformed

    private void receiverFormConfigMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiverFormConfigMenuActionPerformed
        // TODO add your handling code here:
        renameReceiverTable();
    }//GEN-LAST:event_receiverFormConfigMenuActionPerformed

    private void buildTrackerSubPanel1() {
        //preparations
        Main.report("Building trackerSubPanel1...");
        trackerSubPanel1.removeAll();
        trackerSubPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        senderTable.setConfig(this.databaseConfig);
        db.setDatabaseConfig(senderTable);
        db.setTableToUse(senderTable);
        System.out.println(Array.get(senderTable.getColumnNames(), 0).toString());
        db.fetchRow(Array.get(senderTable.getColumnNames(), 0).toString(), trackerPR);
        int width = 150,
                x = 0,
                y = 5,
                height = 25;
        trackerSubPanel1.add(new javax.swing.JLabel("Sender Results for: " + trackerPR), new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, 2 * width, height));
        y += height;
        String columnNames[] = senderTable.getColumnNames();
        System.out.println("ColumnNames: " + columnNames);
        String columnValues[] = db.fetchRow(columnNames[prColNum], trackerPR);
        System.out.println("ColumnValuess: " + columnValues);
        for (int i = 0; i < senderTable.getColumnCount(); i++) {
            senderFieldName[i].setText(columnNames[i]);
            trackerSubPanel1.add(senderFieldName[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, width, height));
            trackerSubPanel1.add(senderFieldValue[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(x + width, y, width, height));
            senderFieldValue[i].setText(columnValues[i]);
            y += height;
        }
        CenterPanel.setPreferredSize(new java.awt.Dimension(2 * x + senderSubmitButton.getWidth(), y + height + 15));
        getContentPane().remove(CenterPanel);
        getContentPane().add(CenterPanel, java.awt.BorderLayout.CENTER);
        pack();
        Main.report("Done building trackerSubPanel1.");
    }

    private void buildTrackerSubPanel2() {
        Main.report("Building trackerSubPanel2...");
        //preparations
        trackerSubPanel2.removeAll();
        trackerSubPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        receiverTable.setConfig(this.databaseConfig);
        db.setDatabaseConfig(receiverTable);
        db.setTableToUse(receiverTable);
        System.out.println(Array.get(senderTable.getColumnNames(), 0).toString());
        db.fetchRow(Array.get(senderTable.getColumnNames(), 0).toString(), trackerPR);

        int width = 150,
                x = 0,
                y = 5,
                height = 25;
        trackerSubPanel2.add(new javax.swing.JLabel("Receiver Results for: " + trackerPR), new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, 2 * width, height));
        y += height;
        String columnNames[] = receiverTable.getColumnNames();
        String columnValues[] = db.fetchRow(columnNames[prColNum], trackerPR);
        for (int i = 0; i < receiverTable.getColumnCount(); i++) {
            receiverFieldName[i].setText(columnNames[i]);
            trackerSubPanel2.add(receiverFieldName[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, width, height));
            trackerSubPanel2.add(receiverFieldValue[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(x + width, y, width, height));
            receiverFieldValue[i].setText(columnValues[i]);
            y += height;
        }
        CenterPanel.setPreferredSize(new java.awt.Dimension(2 * (x + width), y + height + 15));
        getContentPane().remove(CenterPanel);
        getContentPane().add(CenterPanel, java.awt.BorderLayout.CENTER);
        pack();
        Main.report("Done buidig trackerSubPanel2.");
    }
    private void receiverToolSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiverToolSelectActionPerformed
        // TODO add your handling code here:
        boolean val = new javax.swing.JRadioButtonMenuItem().getClass().cast(evt.getSource()).isSelected();
        if (val) {
            buildReceiverPanel();
            CenterPanel.removeAll();
            CenterPanel.add(receiverPanel);
            blink(CenterPanel);
        }

    }//GEN-LAST:event_receiverToolSelectActionPerformed

    private void receiverLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_receiverLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_receiverLabelMouseClicked

    private void receiverSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiverSubmitButtonActionPerformed
        // TODO add your handling code here:
        if (prCode == null) {
            return;
        }
        String str[] = new String[receiverTable.getColumnCount()];
        for (int i = 0; i < receiverTable.getColumnCount(); i++) {
            str[i] = receiverFieldValue[i].getText();
        }
        db.insertRow(receiverTable.getColumnNames(), str, true);
    }//GEN-LAST:event_receiverSubmitButtonActionPerformed

    private void receiverLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiverLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receiverLocationActionPerformed

    private void receiverLocationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_receiverLocationFocusLost
        // TODO add your handling code here:
        String str = Reader.readQRCode(receiverLocation.getText());
        prCode = str.substring(0, str.length() - 1);
    }//GEN-LAST:event_receiverLocationFocusLost

    private void receiverBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiverBrowseButtonActionPerformed
        // TODO add your handling code here:
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG & GIF Images", "jpg", "gif", "png");
        fc.setFileFilter(filter);
        int returnVal = fc.showOpenDialog(Main.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            receiverLocation.setText(fc.getSelectedFile().toString());
            prCode = Reader.readQRCode(receiverLocation.getText());
        }
    }//GEN-LAST:event_receiverBrowseButtonActionPerformed

    private void senderPanelComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_senderPanelComponentRemoved
        // TODO add your handling code here:

    }//GEN-LAST:event_senderPanelComponentRemoved

    private void senderPanelComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_senderPanelComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_senderPanelComponentAdded

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        prColNum = Integer.valueOf(JOptionPane.showInputDialog(this, "Enter PR column number, ie. col0, col1, col2, etc:\nDefault: 1", "Set PR column number", JOptionPane.QUESTION_MESSAGE));
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        ctrlColNum = Integer.valueOf(JOptionPane.showInputDialog(this, "Enter Control column number, ie. col0, col1, col2, etc:\nDefault: 0", "Set Control column number", JOptionPane.QUESTION_MESSAGE));

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        new CtrlNumGenerator().setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void renameReceiverTable() {
        Main.report("Renaming Receiver table...");
        String str = JOptionPane.showInputDialog(this, "Enter receiver table name:", "Edit receiver table name", JOptionPane.QUESTION_MESSAGE);
        if (str == null) {
            return;
        }
        receiverTable.setTableName(str);
        db.setTableToUse(receiverTable);
        receiverTable.setNewTable(databaseConfig);
        db.setDatabaseConfig(receiverTable);
        Main.report("Done renaming Receiver table.");
    }

    /**
     * Renames the senderTable then updates the databaseConfig.
     */
    private void renameSenderTable() {
        Main.report("Renaming Sender table...");
        String str = JOptionPane.showInputDialog(this, "Enter sender table name:", "Edit sender table name", JOptionPane.QUESTION_MESSAGE);
        if (str == null) {
            return;
        }
        senderTable.setTableName(str);
        db.setTableToUse(senderTable);
        senderTable.setNewTable(databaseConfig);
        db.setDatabaseConfig(senderTable);
        Main.report("Done renaming Sender table.");
    }

    /**
     * This method renews the old Layout of the SenderPanel as to implement
     * variable text fields which will be taken from the database.
     */
    private void buildSenderPanel() {
        Main.report("Building Sender Panel...");
        int width = 150,
                x = 0,
                y = 5,
                height = 25;
        senderPanel.add(new javax.swing.JLabel("Sender Form"), new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, width, height));
        y += height;
        String columnNames[] = senderTable.getColumnNames();
        for (int i = 0; i < senderTable.getColumnCount(); i++) {
            senderFieldName[i].setText(columnNames[i]);
            senderPanel.add(senderFieldName[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, width, height));
            senderPanel.add(senderFieldValue[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(x + width, y, width, height));
            senderPanel.add(senderInsertTextButton[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(x + 2 * width, y, 25, height));
            y += height;
        }
        senderPanel.add(senderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(x + 5, y, width, height));
        senderPanel.add(senderLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(x + width, y, width, height));
        senderPanel.add(senderBrowseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(x + 2 * width, y, 25, height));
        y += height + 5;
        senderPanel.add(senderSubmitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, 2 * width + 25, height + 5));
        CenterPanel.setPreferredSize(new java.awt.Dimension(2 * x + senderSubmitButton.getWidth(), y + height + 15));
        getContentPane().remove(CenterPanel);
        getContentPane().add(CenterPanel, java.awt.BorderLayout.CENTER);
        pack();
        Main.report("Done building Sender Panel.");
    }

    private void buildReceiverPanel() {
        Main.report("Buildig Receiver Panel...");
        int width = 150,
                x = 0,
                y = 5,
                height = 25;
        receiverPanel.add(new javax.swing.JLabel("Receiver Form"), new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, width, height));
        y += height;
        String columnNames[] = receiverTable.getColumnNames();
        for (int i = 0; i < receiverTable.getColumnCount(); i++) {
            receiverFieldName[i].setText(columnNames[i]);
            receiverPanel.add(receiverFieldName[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, width, height));
            receiverPanel.add(receiverFieldValue[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(x + width, y, width, height));
            receiverPanel.add(receiverInsertTextButton[i], new org.netbeans.lib.awtextra.AbsoluteConstraints(x + 2 * width, y, 25, height));
            y += height;
        }
        receiverPanel.add(receiverLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(x + 5, y, width, height));
        receiverPanel.add(receiverLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(x + width, y, width, height));
        receiverPanel.add(receiverBrowseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(x + 2 * width, y, 25, height));
        y += height + 5;
        receiverPanel.add(receiverSubmitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, 2 * width + 25, height + 5));
        CenterPanel.setPreferredSize(new java.awt.Dimension(2 * x + receiverSubmitButton.getWidth(), y + height + 15));
        getContentPane().remove(CenterPanel);
        getContentPane().add(CenterPanel, java.awt.BorderLayout.CENTER);
        pack();
        Main.report("Done building Receiver Panel.");
    }

    /**
     * This method is intended for the handler of the array of buttons used to
     * insert pre-made texts in the sender and receiver panel.
     *
     * @param evt
     */
    @Override
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        Object source = evt.getSource();
        for (int i = 0; i < senderTable.getColumnCount(); i++) {
            //To determine which button is senderInsertTextButton is pressed, the y-positions are compared.
            if (source == senderInsertTextButton[i]) {
                Object[] possibleValues = {"Control Number", "MAC add", "IPv4 add", "Date", "Time"};
                Object selectedValue = JOptionPane.showInputDialog(this,
                        "Choose one", "Insert premade text",
                        JOptionPane.INFORMATION_MESSAGE, null,
                        possibleValues, possibleValues[0]);
                //Determine user dialog selection
                if (selectedValue != null) {
                    if (selectedValue.equals(possibleValues[0])) {
                        senderFieldValue[i].setText(getControlNum());
                    }
                    if (selectedValue.equals(possibleValues[1])) {
                        senderFieldValue[i].setText(getOwnMAC());
                    }
                    if (selectedValue.equals(possibleValues[2])) {
                        senderFieldValue[i].setText(getOwnIP());
                    }
                    if (selectedValue.equals(possibleValues[3])) {
                        senderFieldValue[i].setText(getOwnDate());
                    }
                    if (selectedValue.equals(possibleValues[4])) {
                        senderFieldValue[i].setText(getOwnTime());
                    }
                }
                break;
            }
        }
        //Receiver
        for (int i = 0; i < receiverTable.getColumnCount(); i++) {
            //To determine which button is receiverInsertTextButton is pressed, the y-positions are compared.
            if (source == receiverInsertTextButton[i]) {
                Object[] possibleValues = {"Control Number", "MAC add", "IPv4 add", "Date", "Time"};
                Object selectedValue = JOptionPane.showInputDialog(this,
                        "Choose one", "Insert premade text",
                        JOptionPane.INFORMATION_MESSAGE, null,
                        possibleValues, possibleValues[0]);
                //Determine user dialog selection
                if (selectedValue != null) {
                    if (selectedValue.equals(possibleValues[0])) {
                        receiverFieldValue[i].setText(getPRcode());
                    }
                    if (selectedValue.equals(possibleValues[1])) {
                        receiverFieldValue[i].setText(getOwnMAC());
                    }
                    if (selectedValue.equals(possibleValues[2])) {
                        receiverFieldValue[i].setText(getOwnIP());
                    }
                    if (selectedValue.equals(possibleValues[3])) {
                        receiverFieldValue[i].setText(getOwnDate());
                    }
                    if (selectedValue.equals(possibleValues[4])) {
                        receiverFieldValue[i].setText(getOwnTime());
                    }

                }
                break;
            }
        }
    }

    private String getPRcode() {
        if (prCode != null) {
            return prCode;
        }
        return "NO PR NUMBER FOUND!";
    }
    
    private String getControlNum(){
        return this.ctrlNum;
    }
    
    /**
     * This method gets the MAC address of the running machine.
     */
    private String getOwnMAC() {
        java.net.InetAddress ip;
        try {

            ip = java.net.InetAddress.getLocalHost();

            java.net.NetworkInterface network = java.net.NetworkInterface.getByInetAddress(ip);

            byte[] mac = network.getHardwareAddress();

            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < mac.length; i++) {
                sb.append(String.format("%02X%s", mac[i], (i < mac.length - 1) ? "-" : ""));
            }
            return sb.toString();
        } catch (java.net.SocketException | UnknownHostException ex) {
            Main.report(ex.getMessage());
        }
        return "Failed to get MAC";
    }

    /**
     * This method gets the IPv4 address of the running machine.
     */
    private String getOwnIP() {
        java.net.InetAddress ip;
        try {
            ip = java.net.InetAddress.getLocalHost();
            return ip.getHostAddress();
        } catch (java.net.UnknownHostException e) {
            Main.report(e.getMessage());
        }
        return "Failed to get IP";
    }

    private void fetch() {
        String primaryKey[];
        primaryKey = trackerTable.getColumnNames();
        String[] results = new String[trackerTable.getColumnCount()];
        results = db.fetchRow(primaryKey[0], prField.getText());
        System.out.println(results.length);
        if (results != null) {
            for (int i = 0; i < results.length; i++) {

            }
        } else {
            System.out.println("Failed to load database.");
        }
    }

    /**
     * This method is equivalent to calling setVisible(false) then
     * setVisible(true).
     *
     * @param pnl - is the JPanel to be hidden then shown.
     */
    private void blink(javax.swing.JPanel pnl) {
        pnl.setVisible(false);
        pnl.setVisible(true);
    }

    private void updateTypeList(File file) {
    }

    /**
     * Gets the current system date.
     */
    private String getOwnDate() {
        String str = Integer.toString(java.time.LocalDate.now().getMonthValue())
                + "/" + Integer.toString(java.time.LocalDate.now().getDayOfMonth())
                + "/" + Integer.toString(java.time.LocalDate.now().getYear());
        return str;
    }

    /**
     * Gets the current system time.
     */
    private String getOwnTime() {
        String str = Integer.toString(java.time.LocalTime.now().getHour())
                + ":" + Integer.toString(java.time.LocalTime.now().getMinute())
                + ":" + Integer.toString(java.time.LocalTime.now().getSecond());
        return str;
    }

    /**
     * Fills the two fields of the Date and Time on the Sender Form tab.
     */
    private void fillDateAndTime() {
        //Setting the time value        
        String str = Integer.toString(java.time.LocalTime.now().getHour())
                + ":" + Integer.toString(java.time.LocalTime.now().getMinute())
                + ":" + Integer.toString(java.time.LocalTime.now().getSecond());
//        fieldVal7.setText(str);
        //Setting the date Value
        str = Integer.toString(java.time.LocalDate.now().getMonthValue())
                + "/" + Integer.toString(java.time.LocalDate.now().getDayOfMonth())
                + "/" + Integer.toString(java.time.LocalDate.now().getYear());
        //      fieldVal9.setText(str);
    }

    /**
     * @param args the command line arguments
     * @throws com.google.zxing.WriterException
     * @throws java.io.IOException
     */
    public static void main(String args[]) throws WriterException, IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            Main.report(ex.getMessage());
        }

        // handle exception
        // handle exception
        // handle exception
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CenterPanel;
    public static javax.swing.JLabel Field18;
    public static javax.swing.JLabel Field19;
    public static javax.swing.JLabel Field20;
    public static javax.swing.JLabel Field21;
    public static javax.swing.JLabel Field22;
    public static javax.swing.JLabel Field23;
    public static javax.swing.JLabel Field24;
    public static javax.swing.JLabel Field25;
    public static javax.swing.JTextArea StatusArea;
    private javax.swing.JTextField addField;
    private javax.swing.JTextField authorField;
    private javax.swing.JCheckBox checkAllBox1;
    private javax.swing.JMenuItem databaseConfigMenu;
    private javax.swing.JTextField dateField;
    private javax.swing.JTextField destField;
    private javax.swing.JComboBox<String> docTypeSelector1;
    private javax.swing.JPanel documentTrackerPanel;
    private javax.swing.JPanel documentTrackerPanel2;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem editSizeMenu;
    private javax.swing.JButton enlargeOutputButton;
    public static javax.swing.JLabel field10;
    public static javax.swing.JLabel field11;
    public static javax.swing.JLabel field12;
    public static javax.swing.JLabel field13;
    public static javax.swing.JLabel field14;
    public static javax.swing.JLabel field15;
    public static javax.swing.JLabel field16;
    public static javax.swing.JLabel field17;
    public static javax.swing.JLabel field9;
    private javax.swing.JCheckBox fieldCheckBox10;
    private javax.swing.JCheckBox fieldCheckBox11;
    private javax.swing.JCheckBox fieldCheckBox12;
    private javax.swing.JCheckBox fieldCheckBox13;
    private javax.swing.JCheckBox fieldCheckBox14;
    private javax.swing.JCheckBox fieldCheckBox15;
    private javax.swing.JCheckBox fieldCheckBox16;
    private javax.swing.JCheckBox fieldCheckBox9;
    private javax.swing.JTextField fieldVal10;
    private javax.swing.JTextField fieldVal11;
    private javax.swing.JTextField fieldVal12;
    private javax.swing.JTextField fieldVal13;
    private javax.swing.JTextField fieldVal14;
    private javax.swing.JTextField fieldVal15;
    private javax.swing.JTextField fieldVal16;
    private javax.swing.JTextField fieldVal17;
    private javax.swing.JTextField fieldVal18;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton genBrowseButton;
    private javax.swing.JButton genBrowseButton3;
    private javax.swing.JButton genCreateButton;
    private javax.swing.JTextArea genTextArea;
    private javax.swing.JPanel generatorPanel;
    private javax.swing.JRadioButtonMenuItem generatorToolSelect;
    private javax.swing.JRadioButtonMenuItem hideAllToolSelect;
    private javax.swing.JLabel inputImageDisplay;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuItem logsMenu;
    private javax.swing.JMenuItem newSessionMenu;
    private javax.swing.JTextField openLocation;
    private javax.swing.JLabel outputImageDisplay;
    private javax.swing.JTextField prField;
    private javax.swing.JButton readBrowseButton;
    private javax.swing.JButton readButton;
    private javax.swing.JTextArea readTextArea;
    private javax.swing.JPanel readerPanel;
    private javax.swing.JRadioButtonMenuItem readerToolSelect;
    private javax.swing.JTextField recField;
    private javax.swing.JButton receiverBrowseButton;
    private javax.swing.JMenuItem receiverFormConfigMenu;
    private javax.swing.JLabel receiverLabel;
    private javax.swing.JTextField receiverLocation;
    private javax.swing.JPanel receiverPanel;
    private javax.swing.JButton receiverSubmitButton;
    private javax.swing.JRadioButtonMenuItem receiverToolSelect;
    private javax.swing.JTextField saveLocation;
    private javax.swing.JTextField saveLocation3;
    private javax.swing.JButton senderBrowseButton;
    private javax.swing.JButton senderCreateButton2;
    private javax.swing.JMenuItem senderFormConfigMenu;
    private javax.swing.JLabel senderLabel;
    private javax.swing.JTextField senderLocation;
    private javax.swing.JPanel senderPanel;
    private javax.swing.JPanel senderPanelOld1;
    private javax.swing.JButton senderSubmitButton;
    private javax.swing.JRadioButtonMenuItem senderToolSelect;
    private javax.swing.JTextField sourceField;
    private javax.swing.JTextField statusField;
    private javax.swing.JTextField timeField;
    private javax.swing.JTextField titleField;
    private javax.swing.ButtonGroup toolsButtonGroup;
    private javax.swing.JMenu toolsMenu;
    private javax.swing.JPanel trackerSubPanel1;
    private javax.swing.JPanel trackerSubPanel2;
    private javax.swing.JRadioButtonMenuItem trackerToolSelect;
    // End of variables declaration//GEN-END:variables

    //Custom declarations! Yay!
    private final JFileChooser fc = new JFileChooser("File");
    private String qrCodeText;
    private String filePath;
    private int qrSize;
    private final String fileType;
    private File qrFile;
    public static File workingDir;
    private final Logs disposableLogs;
    private final Preview preview;
    private DatabaseConfig databaseConfig;
    private DatabaseManager db;
    private DatabaseTable trackerTable;
    private DatabaseTable senderTable;
    private DatabaseTable receiverTable;
    private javax.swing.JLabel senderFieldName[] = new javax.swing.JLabel[1];
    private javax.swing.JTextField senderFieldValue[] = new javax.swing.JTextField[1];
    private javax.swing.JButton senderInsertTextButton[] = new javax.swing.JButton[1];
    private javax.swing.JLabel receiverFieldName[] = new javax.swing.JLabel[1];
    private javax.swing.JTextField receiverFieldValue[] = new javax.swing.JTextField[1];
    private javax.swing.JButton receiverInsertTextButton[] = new javax.swing.JButton[1];
    private int prLength = 10;
    private int prColNum = 1;
    private int ctrlColNum = 0;
    private String prCode;
    private String trackerPR;
    static String ctrlNum;

    //End of Custom declaration! Yay again!
    /**
     * Simplified method for printing current timestamp.
     */
    private static String stamp() {
        String time = java.time.LocalTime.now().toString();
        return time;
    }

    private void createQR(String qrCodeText, String filePath) {
        qrFile = new File(filePath);
        try {
            Generator.createQRImage(qrFile, qrCodeText, qrSize, fileType);

        } catch (WriterException | IOException ex) {
            Main.report(ex.getMessage());
        } catch (IllegalArgumentException ex) {
            Main.report(ex.getMessage());
            String message = "Please fill Information to Encode.";
            JOptionPane.showMessageDialog(Main.this, message, "Warning", JOptionPane.ERROR_MESSAGE);
        }
        if (qrFile.isFile()) {          //if the qrImage was successfully created on the specified path
            report("QR image created @ " + filePath);
        } else {
            String message = "Please fix filepath.";
            JOptionPane.showMessageDialog(Main.this, message, "Warning", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void readQR() {
        String path = openLocation.getText();
        readTextArea.setText(Reader.readQRCode(path));

    }

    /**
     * A simplified method to update StatusTextArea and command line for each
     * event. Each report contains current time stamp.
     *
     * @param event
     */
    public static void report(String eventStr) {
        StatusArea.append("\n" + stamp() + ": " + eventStr);
    }

    /**
     * load the default document types
     */
    private void loadSettings(String fileName) {
        TextIO.readFile(fileName);
        StringBuilder str = new StringBuilder();
        String[] docParamName = new String[8];
        int paramCount = 0;                 //counts how many parameters does a certain document type have
        char c = ' ';
        do {
            c = TextIO.getChar();
            //name of Document parameter
            while (c != ',' && c != ';') {
                str = str.append(c);
                c = TextIO.getAnyChar();
            }
            docParamName[paramCount] = str.toString();
            str = new StringBuilder();      //resets the stringBuilder
            paramCount++;
        } while (c != ';');

        //Edit FieldNames
        if (docParamName[0] != null && !docParamName[0].equals("")) {
//            field1.setText(docParamName[0]);
            //          fieldCheckBox1.setSelected(true);
        }
        if (docParamName[1] != null && !docParamName[1].equals("")) {
            //        field2.setText(docParamName[1]);
            //      fieldCheckBox2.setSelected(true);
        }
        if (docParamName[2] != null && !docParamName[2].equals("")) {
            //    field3.setText(docParamName[2]);
            //  fieldCheckBox3.setSelected(true);
        }
        if (docParamName[3] != null && !docParamName[3].equals("")) {
            //field4.setText(docParamName[3]);
            //fieldCheckBox4.setSelected(true);
        }
        if (docParamName[4] != null && !docParamName[4].equals("")) {
            //field5.setText(docParamName[4]);
            //fieldCheckBox5.setSelected(true);
        }
        if (docParamName[5] != null && !docParamName[5].equals("")) {
            //field6.setText(docParamName[5]);
            //fieldCheckBox6.setSelected(true);
        }
        if (docParamName[6] != null && !docParamName[6].equals("")) {
            //field7.setText(docParamName[6]);
            //fieldCheckBox7.setSelected(true);
        }
        if (docParamName[7] != null && !docParamName[7].equals("")) {
            //field8.setText(docParamName[7]);
            //fieldCheckBox8.setSelected(true);
        }

    }
}
