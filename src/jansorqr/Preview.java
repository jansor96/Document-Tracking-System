/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jansorqr;

/**
 * This class displays a specified object in a separate window. The display
 * automatically disappears on when out of focus.
 *
 * @author jansoriano acer
 */
public class Preview extends javax.swing.JFrame {

    /**
     * Creates new form Previewer
     */
    public Preview() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagePanel = new javax.swing.JPanel();
        textPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Preview");
        setAlwaysOnTop(true);
        setSize(new java.awt.Dimension(640, 480));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        imagePanel.setMinimumSize(new java.awt.Dimension(50, 100));
        imagePanel.setPreferredSize(new java.awt.Dimension(300, 300));
        imagePanel.setLayout(new java.awt.BorderLayout());
        getContentPane().add(imagePanel);

        textPanel.setLayout(new java.awt.BorderLayout());

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        textPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(textPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
        imagePanelActive = false;
        dispose();
    }//GEN-LAST:event_formWindowLostFocus

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowStateChanged

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_formPropertyChange

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
        if (imagePanelActive) {
            int height = this.getHeight() - 40;
            int width = this.getWidth();
            hideAll();
            imagePanel.removeAll();
            if (height > width) {
                imagePanel.add(new DisplayImage(imageAddress, width, width));
            } else {
                imagePanel.add(new DisplayImage(imageAddress, height, height));
            }
            imagePanel.setVisible(true);
            setVisible(true);
        }
    }//GEN-LAST:event_formComponentResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Preview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Preview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Preview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Preview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Preview().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel imagePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textArea;
    private javax.swing.JPanel textPanel;
    // End of variables declaration//GEN-END:variables

    //Custom declaration
    private boolean imagePanelActive = false;
    private String imageAddress;

    private javax.swing.JTextArea txtArea = new javax.swing.JTextArea();

    /**
     * Displays the text area only with the specified text.
     *
     * @param str - the text to be displayed.
     */
    public void showTextArea(String str) {
        hideAll();
        textArea.setText(str);
        textPanel.setVisible(true);
        setVisible(true);
    }

    public void showImageArea(String address) {
        imageAddress = address;
        imagePanelActive = true;
        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(imageAddress);
        int height = icon.getIconHeight();
        int width = icon.getIconWidth();
        hideAll();
        imagePanel.removeAll();
        setSize(width + 100, height + 100);
        imagePanel.add(new DisplayImage(address, width, height));
        imagePanel.setVisible(true);
        setVisible(true);
    }

    /**
     * Performs 'setVisible(false)' on all the panels.
     */
    private void hideAll() {
        textPanel.setVisible(false);
        imagePanel.setVisible(false);
    }
}
